# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones]
    App\Controller\:
        resource: '../src/Controller/'
        tags: [ 'controller.service_arguments' ]
        public: true
        exclude:
            - '../src/Controller/ItemController.php'

    App\Controller\FruitController: ~
    App\Controller\VegetableController: ~

    App\Controller\ItemController.fruit:
        class: App\Controller\ItemController
        arguments:
            - '@App\Collection\FruitCollection'
            - 'Fruits retrieved successfully.'
        tags: [ 'controller.service_arguments' ]

    App\Controller\ItemController.vegetable:
        class: App\Controller\ItemController
        arguments:
            - '@App\Collection\VegetableCollection'
            - 'Vegetables retrieved successfully.'
        tags: [ 'controller.service_arguments' ]

    App\Service\StorageService:
        arguments:
            $collections: !tagged_iterator { tag: 'app.item_collection', default_index_method: 'getIndex' }
